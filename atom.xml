<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Han1254</title>
  
  <subtitle>走在成为极客的路上。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-02T14:32:39.222Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Han1254</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PTA--进制转换</title>
    <link href="http://yoursite.com/2019/03/02/PTA-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yoursite.com/2019/03/02/PTA-进制转换/</id>
    <published>2019-03-02T13:05:35.000Z</published>
    <updated>2019-03-02T14:32:39.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="22-D进制的A-B（Java）"><a href="#22-D进制的A-B（Java）" class="headerlink" title="22. D进制的A+B（Java）"></a>22. D进制的A+B（Java）</h1><p>题目要求：  </p><blockquote><p>输入两个非负 10 进制整数 A 和 B (≤2^30−1)，输出 A+B 的 D (1&lt;D≤10)进制数。  </p></blockquote><blockquote><p><strong>输入格式</strong>：<br>输入在一行中依次给出 3 个整数 A、B 和 D。<br><a id="more"></a><br><strong>输出格式</strong>：<br>输出 A+B 的 D 进制数。   </p></blockquote><blockquote><p>输入样例：<br>123 456 8<br>输出样例：<br>1103   </p></blockquote><p><em>解析：其实这样的题不算难，但是自己老是记不住进制转换的方法，记录一下这个题，顺便用Java来实现一下。</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Scanner in = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">//int范围[-2^31-(2^31-1)]</span><br><span class="line"></span><br><span class="line">int A = in.nextInt();</span><br><span class="line"></span><br><span class="line">int B = in.nextInt();</span><br><span class="line"></span><br><span class="line">int D = in.nextInt();</span><br><span class="line"></span><br><span class="line">in.close();</span><br><span class="line"></span><br><span class="line">int sum = A + B;</span><br><span class="line"></span><br><span class="line">//用于将余数插入到StringBuffer中</span><br><span class="line"></span><br><span class="line">StringBuffer string = new StringBuffer();</span><br><span class="line"></span><br><span class="line">while(sum != 0)&#123;</span><br><span class="line"></span><br><span class="line">int temp = sum % D;</span><br><span class="line"></span><br><span class="line">string.append(temp);</span><br><span class="line"></span><br><span class="line">sum /= D;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//对StringBuffer内容进行倒序</span><br><span class="line"></span><br><span class="line">string.reverse();</span><br><span class="line"></span><br><span class="line">System.out.println(string);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这时候我就疑惑了：`StringBuffer`是个什么鬼？  </span><br><span class="line">详情参见[菜鸟教程](http://www.runoob.com/java/java-stringbuffer.html)  </span><br><span class="line">&gt;**Java StringBuffer 和 StringBuilder 类**</span><br><span class="line"></span><br><span class="line">&gt;当对字符串进行修改的时候，需要使用 StringBuffer 和 StringBuilder 类。 </span><br><span class="line">和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次的修改，并且不产生新的未使用对象。 </span><br><span class="line">StringBuilder 类在 Java 5 中被提出，它和 StringBuffer 之间的最大不同在于 StringBuilder 的方法不是线程安全的（不能同步访问）。 </span><br><span class="line">由于 StringBuilder 相较于 StringBuffer 有速度优势，所以多数情况下建议使用 StringBuilder 类。然而在应用程序要求线程安全的情况下，则必须使用 StringBuffer 类。  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">Test.java 文件代码：</span><br></pre></td></tr></table></figure></p><p>public class Test{<br>  public static void main(String args[]){<br>    StringBuffer sBuffer = new StringBuffer(“菜鸟教程官网：”);<br>    sBuffer.append(“www”);<br>    sBuffer.append(“.runoob”);<br>    sBuffer.append(“.com”);<br>    System.out.println(sBuffer);<br>  }<br>}<br><code>`</code><br>结果：  </p><blockquote><p>菜鸟教程官网：<a href="http://www.runoob.com" target="_blank" rel="noopener">www.runoob.com</a></p></blockquote><p><strong>StringBuffer 方法</strong><br>序号|方法描述<br>-|-|-<br>1|public StringBuffer append(String s):将指定的字符串追加到此字符序列。<br>2| public StringBuffer reverse():将此字符序列用其反转形式取代。<br>3|public delete(int start, int end):移除此序列的子字符串中的字符。<br>4| public insert(int offset, int i):将 int 参数的字符串表示形式插入此序列中<br>5|replace(int start, int end, String str):使用给定 String 中的字符替换此序列的子字符串中的字符。<br>最后的结果如下：<br><img src="/2019/03/02/PTA-进制转换/1.PNG" alt>  </p><ul><li>还是只有一个测试点通不过，醉了。<strong>…（⊙＿⊙；）…</strong>  </li><li>为啥表格显示不出来？  </li><li>文字为啥跑到代码里面去了<strong>╮（╯＿╰）╭</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;22-D进制的A-B（Java）&quot;&gt;&lt;a href=&quot;#22-D进制的A-B（Java）&quot; class=&quot;headerlink&quot; title=&quot;22. D进制的A+B（Java）&quot;&gt;&lt;/a&gt;22. D进制的A+B（Java）&lt;/h1&gt;&lt;p&gt;题目要求：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入两个非负 10 进制整数 A 和 B (≤2^30−1)，输出 A+B 的 D (1&amp;lt;D≤10)进制数。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;输入格式&lt;/strong&gt;：&lt;br&gt;输入在一行中依次给出 3 个整数 A、B 和 D。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PTA" scheme="http://yoursite.com/categories/PTA/"/>
    
      <category term="进制转换" scheme="http://yoursite.com/categories/PTA/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="PTA" scheme="http://yoursite.com/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Mooncake</title>
    <link href="http://yoursite.com/2019/03/02/PTA-Mooncake/"/>
    <id>http://yoursite.com/2019/03/02/PTA-Mooncake/</id>
    <published>2019-03-02T08:17:08.000Z</published>
    <updated>2019-03-02T08:31:37.748Z</updated>
    
    <content type="html"><![CDATA[<p><strong>20.题目要求：</strong>  </p><blockquote><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。<br><a id="more"></a></p></blockquote><blockquote><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。  </p></blockquote><blockquote><p>输入格式：  </p></blockquote><blockquote><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N 表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数 D 表示市场最大需求量。随后一行给出 N 个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出 N 个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。  </p></blockquote><blockquote><p>输出格式：  </p></blockquote><blockquote><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。  </p></blockquote><blockquote><p>输入样例：<br>3 20<br>18 15 10<br>75 72 45<br>输出样例：<br>94.50  </p></blockquote><hr><p>我的解答(C++):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;iomanip&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">class mooncake&#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">double cage;</span><br><span class="line">double consale;</span><br><span class="line">double ave;</span><br><span class="line">&#125;;</span><br><span class="line">bool cmp(mooncake a,mooncake b)// **这个很关键，用来对对象数组进行排序**</span><br><span class="line">&#123;</span><br><span class="line">return a.ave&gt;b.ave;</span><br><span class="line">&#125;</span><br><span class="line">int main() </span><br><span class="line">&#123;</span><br><span class="line">double s=0.0;</span><br><span class="line">int n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">double quar;</span><br><span class="line">cin&gt;&gt;quar;</span><br><span class="line">mooncake m[n];</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;m[i].cage;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;m[i].consale;</span><br><span class="line">m[i].ave=m[i].consale/m[i].cage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sort(m,m+n,cmp);</span><br><span class="line">int t=0;</span><br><span class="line">while(quar&gt;=0)</span><br><span class="line">&#123;</span><br><span class="line">if(m[t].cage&lt;quar)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">s+=m[t].consale;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">s+=quar*m[t].ave;</span><br><span class="line">&#125;</span><br><span class="line">quar-=m[t].cage;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>有一个测试点错了，23分。 </p><p><strong>看看网上的答案，跟我差不多：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">#include&lt;iomanip&gt;</span><br><span class="line"></span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">struct MoonCake&#123;</span><br><span class="line"></span><br><span class="line">double num,totalp,singlep;//3个double型的库存量，总价，单价 </span><br><span class="line"></span><br><span class="line">&#125;cakes[1000];</span><br><span class="line"></span><br><span class="line">bool cmp(MoonCake a,MoonCake b)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">return a.singlep&gt;b.singlep;//设计函数以降序 </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">int n,maxreq;//定义种类，最大需求量 </span><br><span class="line"></span><br><span class="line">cin&gt;&gt;n&gt;&gt;maxreq;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line"></span><br><span class="line">cin&gt;&gt;cakes[i].num;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line"></span><br><span class="line">cin&gt;&gt;cakes[i].totalp;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line"></span><br><span class="line">cakes[i].singlep=cakes[i].totalp/cakes[i].num;</span><br><span class="line"></span><br><span class="line">sort(cakes,cakes+n,cmp);</span><br><span class="line"></span><br><span class="line">double maxbenf=0;</span><br><span class="line"></span><br><span class="line">for(int i=0;i&lt;n;i++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if(maxreq&lt;=cakes[i].num)//如果最大需求量不大于当前库存 </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">maxbenf+=cakes[i].singlep*maxreq;//最大收益即当前单价乘以最大需求量 </span><br><span class="line"></span><br><span class="line">break;//注意及时退出 </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">maxbenf+=cakes[i].totalp;//否则最大收益累加当前总价 </span><br><span class="line"></span><br><span class="line">maxreq-=cakes[i].num;//需求量减去当前库存 </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(2)&lt;&lt;maxbenf;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;20.题目要求：&lt;/strong&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="PTA" scheme="http://yoursite.com/categories/PTA/"/>
    
      <category term="Mooncake" scheme="http://yoursite.com/categories/PTA/Mooncake/"/>
    
    
      <category term="PTA" scheme="http://yoursite.com/tags/PTA/"/>
    
  </entry>
  
  <entry>
    <title>blog-4</title>
    <link href="http://yoursite.com/2019/03/02/blog-4/"/>
    <id>http://yoursite.com/2019/03/02/blog-4/</id>
    <published>2019-03-02T01:56:12.000Z</published>
    <updated>2019-03-02T02:12:48.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-github搭建的博客部分图片无法显示"><a href="#Hexo-github搭建的博客部分图片无法显示" class="headerlink" title="Hexo+github搭建的博客部分图片无法显示"></a>Hexo+github搭建的博客部分图片无法显示</h1><a id="more"></a><p>这个问题我已经发现好长时间了，昨天脑子一抽，看了一下那些无法显示的图片再源文件里的地址，发现——它的拓展名跟文件夹里的不一样。文件夹里的是<code>PNG</code>，但再markdown文件里是<code>png</code>，但是VScode太智能了，竟然没有发现，照常能预览 (╯￣Д￣)╯ ┻━┻    </p><ul><li><p>如果我这样<br><img src="/2019/03/02/blog-4/1.PNG" alt><br>最后的结果就会是这样<br><img src="/2019/03/02/blog-4/1.png" alt>    </p></li><li><p>如果我这样<br><img src="/2019/03/02/blog-4/2.PNG" alt><br>就能正常显示了<br><img src="/2019/03/02/blog-4/继承.PNG" alt> </p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-github搭建的博客部分图片无法显示&quot;&gt;&lt;a href=&quot;#Hexo-github搭建的博客部分图片无法显示&quot; class=&quot;headerlink&quot; title=&quot;Hexo+github搭建的博客部分图片无法显示&quot;&gt;&lt;/a&gt;Hexo+github搭建的博客部分图片无法显示&lt;/h1&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Android-活动的生命周期</title>
    <link href="http://yoursite.com/2019/03/01/Android-%E6%B4%BB%E5%8A%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://yoursite.com/2019/03/01/Android-活动的生命周期/</id>
    <published>2019-03-01T14:08:16.000Z</published>
    <updated>2019-03-01T15:50:09.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-活动的生命周期"><a href="#Android-活动的生命周期" class="headerlink" title="Android-活动的生命周期"></a>Android-活动的生命周期</h1><a id="more"></a>    <p>–&gt; <strong>开局一张图：</strong>  </p><h2 id><a href="#" class="headerlink" title></a><img src="/2019/03/01/Android-活动的生命周期/安卓2.png" alt></h2><hr><ul><li><code>onCreate()</code>:  <blockquote><p>每个活动中我们都重写了这个方法，它会在活动第一次被创建的时候调用。你应该在这个方法中完成活动的初始化操作，比如说加载布局、绑定事件等。  </p></blockquote></li></ul><hr><ul><li><code>onStart()</code>: <blockquote><p>这个方法在活动由不可见变为可见的时候调用。</p></blockquote></li></ul><hr><ul><li><code>onStop()</code>:<blockquote><p>这个方法在活动完全不可见的时候调用。它和onPause()    方法的主要区别在 于，如果启动的新活动是一个对话框式的活动，那么onPause()    方法会得到执行， 而onStop()    方法并不会执行。   </p></blockquote></li></ul><hr><ul><li><code>onResume()</code>: <blockquote><p>这个方法在活动准备好和用户进行交互的时候调用。此时的活动一定位于 返回栈的栈顶，并且处于运行状态。</p></blockquote></li></ul><hr><ul><li><code>onPause()</code>:<blockquote><p>这个方法在系统准备去启动或者恢复另一个活动的时候调用。我们通常会在 这个方法中将一些消耗CPU的资源释放掉，以及保存一些关键数据，但这个方法的执行速 度一定要快，不然会影响到新的栈顶活动的使用。</p></blockquote></li></ul><hr><ul><li><code>onDestroy()</code>:<blockquote><p>这个方法在活动被销毁之前调用，之后活动的状态将变为销毁状态。</p></blockquote></li></ul><hr><ul><li><code>onRestart()</code>:<blockquote><p>这个方法在活动由停止状态变为运行状态之前调用，也就是活动被重新启动了。 </p></blockquote></li></ul><hr><p><em>这是一张活动顺序表</em>   </p><h2 id="-1"><a href="#-1" class="headerlink" title="    "></a><img src="/2019/03/01/Android-活动的生命周期/liucheng.PNG" alt>    </h2><hr><p>–&gt; <strong>接下来就是实际演练了</strong>  </p><p><img src="/2019/03/01/Android-活动的生命周期/2.png" alt>  </p><p><img src="/2019/03/01/Android-活动的生命周期/6.PNG" alt>      </p><blockquote><p>打开normal：  </p></blockquote><p><img src="/2019/03/01/Android-活动的生命周期/7.PNG" alt>  </p><blockquote><p>返回Main:  </p></blockquote><p><img src="/2019/03/01/Android-活动的生命周期/10.png" alt>  </p><blockquote><p>结束进程：  </p></blockquote><p><img src="/2019/03/01/Android-活动的生命周期/11.PNG" alt>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-活动的生命周期&quot;&gt;&lt;a href=&quot;#Android-活动的生命周期&quot; class=&quot;headerlink&quot; title=&quot;Android-活动的生命周期&quot;&gt;&lt;/a&gt;Android-活动的生命周期&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>blog-3</title>
    <link href="http://yoursite.com/2019/02/28/blog-3/"/>
    <id>http://yoursite.com/2019/02/28/blog-3/</id>
    <published>2019-02-27T16:07:03.000Z</published>
    <updated>2019-02-27T16:12:54.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今天尝试把博客的侧栏打开，把头像，博客标题，副标题还有博客描述都换一下，可谁知道一换都成乱码了，最佳解决方案：用高级编译器——Visio-code打开，然后写中文就没事了。中文有时候真的很麻烦。"><a href="#今天尝试把博客的侧栏打开，把头像，博客标题，副标题还有博客描述都换一下，可谁知道一换都成乱码了，最佳解决方案：用高级编译器——Visio-code打开，然后写中文就没事了。中文有时候真的很麻烦。" class="headerlink" title="　　今天尝试把博客的侧栏打开，把头像，博客标题，副标题还有博客描述都换一下，可谁知道一换都成乱码了，最佳解决方案：用高级编译器——Visio code打开，然后写中文就没事了。中文有时候真的很麻烦。  "></a>　　今天尝试把博客的侧栏打开，把头像，博客标题，副标题还有博客描述都换一下，可谁知道一换都成乱码了，最佳解决方案：用高级编译器——Visio code打开，然后写中文就没事了。中文有时候真的很麻烦。  </h2><p>好了，该睡了。<br>债见！&lt;(￣︶￣)&gt;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;今天尝试把博客的侧栏打开，把头像，博客标题，副标题还有博客描述都换一下，可谁知道一换都成乱码了，最佳解决方案：用高级编译器——Visio-code打开，然后写中文就没事了。中文有时候真的很麻烦。&quot;&gt;&lt;a href=&quot;#今天尝试把博客的侧栏打开，把头像，博客标题，副
      
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Java-继承与派生</title>
    <link href="http://yoursite.com/2019/02/27/Java-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F/"/>
    <id>http://yoursite.com/2019/02/27/Java-继承与派生/</id>
    <published>2019-02-27T12:52:18.000Z</published>
    <updated>2019-03-02T01:48:45.038Z</updated>
    
    <content type="html"><![CDATA[<p>对于Java的学习，我现在主要是在B站的<a href="https://www.bilibili.com/video/av37316788/?p=32" target="_blank" rel="noopener">【SiKi学院JavaEE】Java编程学习</a><br><a id="more"></a><br>今天呢，我已经学习到继承与派生。关键知识点有：  </p><ol><li><strong>继承关键字</strong><br><code>extends</code>   <h2 id><a href="#" class="headerlink" title="  "></a><img src="/2019/02/27/Java-继承与派生/继承.PNG" alt>  </h2></li><li><strong>父类里的私有成员</strong><br>需要用父类里的公有成员函数进行访问和赋值修改。  </li></ol><hr><ol start="3"><li><strong>父类的构造方法调用</strong>  </li></ol><ul><li>利用super方法，如下图：<br><img src="/2019/02/27/Java-继承与派生/父类.PNG" alt><br><img src="/2019/02/27/Java-继承与派生/父类的构造调用.PNG" alt> </li><li>子类调用无参的构造方法时，父类如果存在有参的构造方法，必须也得有无参构造方法。  </li><li>调用其他构造方法<br><img src="/2019/02/27/Java-继承与派生/调用其他构造.PNG" alt><br><img src="/2019/02/27/Java-继承与派生/this调用构造-1.png" alt><br><img src="/2019/02/27/Java-继承与派生/this调用2-1.png" alt>  <h2 id="注意：通过-this和-super调用其他构造方法的时候，必须在第一条语句。"><a href="#注意：通过-this和-super调用其他构造方法的时候，必须在第一条语句。" class="headerlink" title="注意：通过 this和 super调用其他构造方法的时候，必须在第一条语句。"></a><strong><em>注意</em></strong>：<em>通过 this和 super调用其他构造方法的时候，必须在第一条语句。</em></h2></li></ul><ol start="4"><li><strong>继承的特点</strong><br>Java支持单继承但不支持多继承。</li></ol><hr><ol start="5"><li><strong>就近原则</strong><br><img src="/2019/02/27/Java-继承与派生/4.PNG" alt><br><img src="/2019/02/27/Java-继承与派生/1-1.PNG" alt><br><img src="/2019/02/27/Java-继承与派生/2-1.png" alt><br><img src="/2019/02/27/Java-继承与派生/3-1.png" alt></li></ol><hr><ol start="6"><li><strong>overload,override,final</strong><br><img src="/2019/02/27/Java-继承与派生/6.PNG" alt><br><strong><em>注意</em></strong>：<em>final在修饰方法的时候，要跟在权限的后面</em><br>例如：<code>public final void eat()</code></li></ol><hr><p>接下来就是技术推广时间～(￣▽￣～)   (～￣▽￣)～  </p><hr><p> <strong>**小技巧：</strong>/(@0_0@)/ LittleTips*<em>:<br>[<code>Ctrl+shift+k</code> </em>取消注释* ]</p><hr><p>&lt;(￣ˇ￣)/债见！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于Java的学习，我现在主要是在B站的&lt;a href=&quot;https://www.bilibili.com/video/av37316788/?p=32&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;【SiKi学院JavaEE】Java编程学习&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="面向对象" scheme="http://yoursite.com/categories/Java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>AndroidNote-1</title>
    <link href="http://yoursite.com/2019/02/26/AndroidNote-1/"/>
    <id>http://yoursite.com/2019/02/26/AndroidNote-1/</id>
    <published>2019-02-26T06:48:50.000Z</published>
    <updated>2019-02-27T14:48:35.929Z</updated>
    
    <content type="html"><![CDATA[<p>前几天由于博客没搭建好，一直也没动手写自己的学习过程，现在博客能用了，可以写一下自己学到的那一丢丢知识了<br><a id="more"></a></p><ul><li>首先是下载AS，然后配置sdk啥的，网上的教程很多。  </li><li>接下来阅读《第一行代码》，在它的带领下，我开始了解了关于Adroid的一些基本概念，四大组件啦，文档结构啦，下面就是我根据基础知识做的一个思维导图：<br><img src="/2019/02/26/AndroidNote-1/mind.png" alt="基础知识">  </li><li>然后呢，当我热情满满地打开AS，创建项目，设置虚拟机，好顺利，正当我暗自窃喜的时候，我点击运行，妈呀，找不到设备。（具体截图我没有了）<br>后来一查，极有可能是由于电脑的虚拟化没开启<blockquote><p>BIOS里开启虚拟化的步骤：<br>1.开机按DEL，进入BIOS；<br>2.BIOS中依次选择：Advanced（高级）——CPU Configuration——Secure Virtual Machine，设置为：Enabled（启用）就行了。<br>3.不过BIOS中默认是开启的，因此不需要手动开启。  </p></blockquote></li></ul><p>但是我的电脑就是打不开bios,估计是需要用U盘，所以我果断选择用了真机。<br>步骤是这样的：  </p><ol><li>安装USB驱动设备 下面有教程<br><a href="https://blog.csdn.net/a594695686/article/details/53467287" target="_blank" rel="noopener">解决AndroidStudio连不上Android设备真机的问题</a>   </li><li>选择Target <img src="/2019/02/26/AndroidNote-1/Edit.png" alt><br><img src="/2019/02/26/AndroidNote-1/target.png" alt>  </li><li>打开手机-&gt;usb调试，开发者选项-&gt;电脑上设备管理器-&gt;更新驱动设备  </li><li>接下来估计就可以连上了。   </li><li>但是也有意外，如果adb接口被占了，文件也就没法编译，也连不上手机（在写这个文章的时候我正好又遇见这个情况，吓我一跳，直接在任务管理器关了比如 <strong><em>360手机助手</em></strong> 这种东西  </li></ol><ul><li>然后就差不多了。点击运行，app会直接安装到手机上，我第一次安装的光闪退，后来又新建了一个项目，直接能在手机上运行了<br><img src="/2019/02/26/AndroidNote-1/app.png" alt>  </li></ul><p><img src="/2019/02/26/AndroidNote-1/view.jpg" alt>    </p><ul><li>接下来我又按照《第一行代码》上的教程，做了另一个app<br><img src="/2019/02/26/AndroidNote-1/app2.png" alt>  </li><li>在这个基础上，我学习了如何创建主活动，添加按钮，如何在点击按钮后产生提示，如何添加新活动，如何在活动之间传递信息，添加菜单，拨打电话等等技术。  </li></ul><p><img src="/2019/02/26/AndroidNote-1/1.jpg" alt>    </p><p><img src="/2019/02/26/AndroidNote-1/2.jpg" alt>   </p><p><img src="/2019/02/26/AndroidNote-1/3.jpg" alt>   </p><p><img src="/2019/02/26/AndroidNote-1/4.jpg" alt>    </p><p><img src="/2019/02/26/AndroidNote-1/5.png" alt>   </p><p>但是这些学到的还只是皮毛，根本不能实战，所以，还需要继续研究书籍，多看教程，多写多练。  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天由于博客没搭建好，一直也没动手写自己的学习过程，现在博客能用了，可以写一下自己学到的那一丢丢知识了&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="note" scheme="http://yoursite.com/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>Study to beauty my blog</title>
    <link href="http://yoursite.com/2019/02/26/Study-to-beauty-my-blog/"/>
    <id>http://yoursite.com/2019/02/26/Study-to-beauty-my-blog/</id>
    <published>2019-02-25T16:23:24.000Z</published>
    <updated>2019-02-27T14:50:16.644Z</updated>
    
    <content type="html"><![CDATA[<p>今天呢，我又开始学习如何美化我的博客页面了<br><a id="more"></a><br>主要还是亏了这个教程  </p><h2 id="hexo的next主题个性化配置教程"><a href="#hexo的next主题个性化配置教程" class="headerlink" title="hexo的next主题个性化配置教程  "></a><a href="https://segmentfault.com/a/1190000009544924#articleHeader8" target="_blank" rel="noopener">hexo的next主题个性化配置教程 </a> </h2><p><em>在教程的帮助下</em></p><ul><li>我学会了如何换主题（其实早就换过(^u^) ）  </li><li>如何打开背景线条  </li><li>修改底部标签的图标  </li><li>每篇文章的结束提示  </li><li>包括通过试错得到的写标签的经验（冒号后要加空格，逗号后也要加空格）</li></ul><hr><p><em>但是也有遗憾</em></p><ul><li>头像没弄出来  </li><li>文章都是直接全文展示（现在学会了）  <blockquote><p>用<code>&lt;!--more--&gt;</code>表示只会显示标志前面的内容</p></blockquote></li><li>点击鼠标后的爱心图标无法实现 </li></ul><hr><p>所以，有空还得继续，加油！<br>最后还有几个教程  </p><ul><li><a href="https://www.bluelzy.com/articles/change_to_next_theme.html" target="_blank" rel="noopener">弃暗投明-Hexo更换next主题</a>  </li><li><a href="https://blog.csdn.net/wsmrzx/article/details/81478945" target="_blank" rel="noopener">Hexo撰写文章</a>  </li><li><a href="https://www.jianshu.com/p/3a05351a37dc" target="_blank" rel="noopener">Hexo的Next主题详细配置</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天呢，我又开始学习如何美化我的博客页面了&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="study" scheme="http://yoursite.com/tags/study/"/>
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>blog</title>
    <link href="http://yoursite.com/2019/02/24/blog/"/>
    <id>http://yoursite.com/2019/02/24/blog/</id>
    <published>2019-02-24T14:52:47.000Z</published>
    <updated>2019-02-28T04:43:16.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Blog的搭建"><a href="#Blog的搭建" class="headerlink" title="Blog的搭建"></a>Blog的搭建</h1><h4 id="2019-2-24"><a href="#2019-2-24" class="headerlink" title="2019.2.24"></a>2019.2.24</h4><a id="more"></a>  <p><em>本文参考:</em><br><a href="https://blog.csdn.net/weixin_39879178/article/details/80319392" target="_blank" rel="noopener">2018.5月使用Github+Hexo搭建自己的博客</a> 　　</p><hr><p>&#160; &#160; &#160; &#160;今天下午，我突发奇想，想要自己搭建一个blog，自娱自乐一下。然鹅，能力不够啊，不知道该如何下手。于是百度又有了用武之地。<br>&#160; &#160; &#160; &#160;刚一开始我是茫然的，但在浏览了一会之后，我有点明白自己要干啥了。<br>&#160; &#160; &#160; &#160;具体过程我不叙述了，才刚开始学，还不太通。   </p><hr><h2 id="gt-gt-需要安装的东西"><a href="#gt-gt-需要安装的东西" class="headerlink" title="&gt;&gt;需要安装的东西"></a>&gt;&gt;需要安装的东西</h2><ol><li><strong>Hexo</strong> <blockquote><p>Hexo官网中说是这么描述的：A fast, simple &amp; powerful blog framework,即:一个快速、简单且强大的博客快速生产工具。它的简单体现在你完全有可能在30分钟内就生成属于你的个人博客。而它的强大体现在你对细节的调整上完全有可能花上一天的时间。  </p></blockquote></li></ol><ol start="2"><li><strong>环境配置</strong></li></ol><ul><li>node.js  <blockquote><p>Node.js 的实质是一个JavaScript运行环境,这里我们主要使用它来生成我们博客的静态页面。从官网下载最新的安装包进行默认安装就好。  </p></blockquote></li><li><p>git  </p><blockquote><p>git是最流行的分布式版本控制系统，我们使用它主要是与github进行交互。安装git使用默认选项安装即可<br><a href="git是最流行的分布式版本控制系统，我们使用它主要是与github进行交互。安装git使用默认选项安装即可">git教程</a>&lt;|click here|</p></blockquote></li><li><p>注册github<br>略  </p><h2 id="gt-gt-实战中的问题"><a href="#gt-gt-实战中的问题" class="headerlink" title="&gt;&gt;实战中的问题"></a>&gt;&gt;实战中的问题</h2></li></ul><ol><li><strong>生成SSH密钥设置到Github</strong><br><img src="/2019/02/24/blog/1.png" alt><br><em>解决方法：我就按照他的做了两遍就成了</em>       </li></ol><ol start="2"><li><strong>预览博客</strong><br>不能让语句停止运行<br><img src="/2019/02/24/blog/2.png" alt><br><em>如上图，不能让它stop</em>  </li></ol><ol start="3"><li><strong>大于hexo 3.0的上传到github的方法</strong><br>他这里用的是.deploy_git文件，我的电脑上没有，所以我更改的是.config.yml文件<br><img src="/2019/02/24/blog/3.png" alt> </li><li><strong>将gitbash部署hexo到github</strong><br><code>hexo deploy</code>  </li></ol><ul><li>遇到的第一个问题就是：<code>hexo s</code>后报错：<br><img src="http://note.youdao.com/noteshare?id=27c7a67a6d850c44713ac589704f1865" alt><br><em>原来是我之前把.config.yml文件里的repo按照他的也改了，其实不用改</em> </li><li>第二个就是：<code>fatal: unable to auto-detect email address (got &#39;Yang@yyw.(none)&#39;)</code>;<br>然后百度之后，解决 ：<br><code>$ git config --global user.email &quot;you@example.com&quot;</code><br><code>$ git config --local -l 查看本地配置</code><br><a href="http://www.voidcn.com/article/p-twicxjaq-ro.html" target="_blank" rel="noopener">原文链接</a><br>最后附上我的博客链接   <a href="https://han1254.github.io/" target="_blank" rel="noopener">Han1254</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Blog的搭建&quot;&gt;&lt;a href=&quot;#Blog的搭建&quot; class=&quot;headerlink&quot; title=&quot;Blog的搭建&quot;&gt;&lt;/a&gt;Blog的搭建&lt;/h1&gt;&lt;h4 id=&quot;2019-2-24&quot;&gt;&lt;a href=&quot;#2019-2-24&quot; class=&quot;headerlink&quot; title=&quot;2019.2.24&quot;&gt;&lt;/a&gt;2019.2.24&lt;/h4&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/02/24/hello-world/"/>
    <id>http://yoursite.com/2019/02/24/hello-world/</id>
    <published>2019-02-24T08:33:38.862Z</published>
    <updated>2019-02-27T14:56:09.399Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a>    </p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
